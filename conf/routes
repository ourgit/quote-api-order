GET         /v1/user/send_mail/                               controllers.TestController.sendMail
+nocsrf
POST        /v1/user/new/                                     controllers.MemberController.signUp(request: Request)
POST        /v1/user/signup_vcode/                            controllers.MemberController.requestSignupVcode(request: Request)
+nocsrf
POST        /v1/user/login/                                   controllers.MemberController.login(request: Request)
POST        /v1/user/logout/                                  controllers.MemberController.logout(request: Request)
#modify login password
POST        /v1/user/loginPassword/                           controllers.MemberController.changeLoginPassword(request: Request)
GET         /v1/user/                                         controllers.MemberController.getUser(request: Request)
#is phonenumber used
GET         /v1/user/is_phonenumber_used/:phoneNumber/        controllers.MemberController.isPhoneNumberUsed(phoneNumber:String)
#modify user infomation
POST        /v1/user/                                         controllers.MemberController.update(request: Request)
POST        /v1/user/reset_login_password/                    controllers.MemberController.resetLoginPassword(request: Request)
POST        /v1/user/set_login_password/                      controllers.MemberController.setLoginPassword(request: Request)
GET         /v1/user/member_balance/                          controllers.MemberController.getBalance(request: Request,balanceType:Int?=0)
GET         /v1/user/my_login_logs/                           controllers.MemberController.listMyLoginLog(request: Request,page:Int?=1)

GET         /v1/user/balance_logs/                            controllers.MemberController.listBalanceLogs(request: Request,bizType:Int?=0,itemId:Int?=0,page:Int?=1)
GET         /v1/user/is_valid_account/:accountName/           controllers.MemberController.isValidAccount(request: Request,accountName:String)
GET         /v1/user/is_login/                                controllers.MemberController.isLogin(request: Request)
POST        /v1/user/change_phone_number/                     controllers.MemberController.changePhoneNumber(request: Request)
GET         /v1/user/msg_list/                                controllers.MemberController.listMsg(request: Request,page:Int?=1,size:Int?=10,msgType:Int?=0)
POST        /v1/user/clear_all_msg/                           controllers.MemberController.clearMsg(request: Request)
POST        /v1/user/clear_selected_msg/                      controllers.MemberController.clearSelectedMsg(request: Request)

###################################################################################################################################
POST        /v1/o/wechat/pay_notify/                          controllers.WechatPayV3Controller.handleWechatPayNotify(request:Request)



GET         /v1/p/articles/                                   controllers.ArticleController.listArticles(page:Int?=1,cateName:String,size:Int?=10)
POST        /v1/p/articles/fav/                               controllers.ArticleController.fav(request: Request)
GET         /v1/p/param_config/                               controllers.ArticleController.getParamConfig(key:String)
GET         /v1/p/discovery_list/                             controllers.ArticleController.listDiscovery(request: Request)
GET         /v1/p/articles_by_category_id/                    controllers.ArticleController.listArticlesByCategoryId(categoryId:Long,page:Int?=1)
GET         /v1/p/recommend_articles/                         controllers.ArticleController.listRecommendArticles
GET         /v1/p/carousels/                                  controllers.CarouselController.listCarousel(request: Request,bizType:Int?=0,clientType:Int?=0)
GET         /v1/p/articles/:articleId/                        controllers.ArticleController.getArticle(request: Request,articleId:Long)

GET         /v1/user/post_categories/                         controllers.PostController.listPostCategories(filter:String?="")
GET         /v1/user/categories_posts/                        controllers.PostController.listPostCategoriesWithPosts
POST        /v1/user/post_list/                               controllers.PostController.listPosts(request: Request)
POST        /v1/user/post/new/                                controllers.PostController.newPost(request: Request)
POST        /v1/user/post/like/                               controllers.PostController.likePost(request: Request)
POST        /v1/user/post/reply/                              controllers.PostController.replyPost(request: Request)
POST        /v1/user/post/                                    controllers.PostController.deletePost(request: Request)
GET         /v1/user/my_posts/                                controllers.PostController.myPosts(request: Request,page:Int?=1)
GET         /v1/user/my_reply/                                controllers.PostController.myReplyList(request: Request,page:Int?=1)
GET         /v1/user/posts/:id/                               controllers.PostController.getPost(request: Request,id:Long)
POST        /v1/user/post/:id/                                controllers.PostController.updatePost(request: Request,id:Long)
POST        /v1/user/post_top/                                controllers.PostController.placePostTop(request: Request)
GET         /v1/user/reply_list/                              controllers.PostController.replyList(request: Request,id:Long?=0,page:Int?=1)

GET         /v1/user/categories/                              controllers.CategoryController.listCategories(filter:String?="",needRecurrence:Boolean?=false)

GET         /v1/user/show_case_list/                          controllers.ShowCaseController.listShowCase(request: Request,shopId:Long?=0,page:Int?=1,title:String?="")
POST        /v1/user/show_case/new/                           controllers.ShowCaseController.addShowCase(request: Request)
POST        /v1/user/show_case/                               controllers.ShowCaseController.deleteShowcase(request: Request)
GET         /v1/user/show_case_list/:id/                      controllers.ShowCaseController.getShowCase(request: Request,id:Long)
POST        /v1/user/show_case/:id/                           controllers.ShowCaseController.updateShowCase(request: Request,id:Long)

POST        /v1/user/service_list/                            controllers.ServiceController.listService(request: Request)
POST        /v1/user/service/new/                             controllers.ServiceController.addService(request: Request)
POST        /v1/user/service/                                 controllers.ServiceController.deleteService(request: Request)
GET         /v1/user/service/:id/                             controllers.ServiceController.getService(request: Request,id:Long)
POST        /v1/user/service/:id/                             controllers.ServiceController.updateService(request: Request,id:Long)

GET         /v1/user/shop_list/                               controllers.ShopController.listShop(request: Request,page:Int?=1,name:String?="")
GET         /v1/user/shop_list/:id/                           controllers.ShopController.getShop(request: Request,id:Long)
POST        /v1/user/shop/:id/                                controllers.ShopController.updateShop(request: Request,id:Long)

POST        /v1/user/apply_auth/                              controllers.MemberController.applyAuth(request: Request)
GET         /v1/user/my_apply_log/                            controllers.MemberController.myApplyLog(request: Request)

POST        /v1/user/my_bid_list/                             controllers.BidController.listMyBid(request: Request)
POST        /v1/user/my_to_bid_list/                          controllers.BidController.myToBidList(request: Request)
GET         /v1/user/bid_list/:id/                            controllers.BidController.getBid(request: Request,id:Long)
POST        /v1/user/ask_bid/                                 controllers.BidController.askBid(request: Request)
POST        /v1/user/bid/:id/                                 controllers.BidController.updateBid(request: Request,id:Long)
POST        /v1/user/place_bid/                               controllers.BidController.placeBid(request: Request)


POST        /v1/user/upload/                                  controllers.AliyunUploadController.upload(request: Request)
################################################################################################################################
#GET            /v1/actor/:name/                                                  controllers.message.ActorController.sayHello(name:String)
#GET            /*file                                                            controllers.Assets.versioned(path="/public", file: Asset)

